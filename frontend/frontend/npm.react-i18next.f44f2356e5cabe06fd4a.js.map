{"version":3,"file":"npm.react-i18next.f44f2356e5cabe06fd4a.js","mappings":"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","sources":["webpack://certificate-manager/./node_modules/react-i18next/dist/es/utils.js","webpack://certificate-manager/./node_modules/react-i18next/dist/es/unescape.js","webpack://certificate-manager/./node_modules/react-i18next/dist/es/defaults.js","webpack://certificate-manager/./node_modules/react-i18next/dist/es/i18nInstance.js","webpack://certificate-manager/./node_modules/react-i18next/dist/es/context.js","webpack://certificate-manager/./node_modules/react-i18next/dist/es/useTranslation.js"],"sourcesContent":["export const warn = (...args) => {\n  if (console?.warn) {\n    if (isString(args[0])) args[0] = `react-i18next:: ${args[0]}`;\n    console.warn(...args);\n  }\n};\nconst alreadyWarned = {};\nexport const warnOnce = (...args) => {\n  if (isString(args[0]) && alreadyWarned[args[0]]) return;\n  if (isString(args[0])) alreadyWarned[args[0]] = new Date();\n  warn(...args);\n};\nconst loadedClb = (i18n, cb) => () => {\n  if (i18n.isInitialized) {\n    cb();\n  } else {\n    const initialized = () => {\n      setTimeout(() => {\n        i18n.off('initialized', initialized);\n      }, 0);\n      cb();\n    };\n    i18n.on('initialized', initialized);\n  }\n};\nexport const loadNamespaces = (i18n, ns, cb) => {\n  i18n.loadNamespaces(ns, loadedClb(i18n, cb));\n};\nexport const loadLanguages = (i18n, lng, ns, cb) => {\n  if (isString(ns)) ns = [ns];\n  ns.forEach(n => {\n    if (i18n.options.ns.indexOf(n) < 0) i18n.options.ns.push(n);\n  });\n  i18n.loadLanguages(lng, loadedClb(i18n, cb));\n};\nexport const hasLoadedNamespace = (ns, i18n, options = {}) => {\n  if (!i18n.languages || !i18n.languages.length) {\n    warnOnce('i18n.languages were undefined or empty', i18n.languages);\n    return true;\n  }\n  return i18n.hasLoadedNamespace(ns, {\n    lng: options.lng,\n    precheck: (i18nInstance, loadNotPending) => {\n      if (options.bindI18n?.indexOf('languageChanging') > -1 && i18nInstance.services.backendConnector.backend && i18nInstance.isLanguageChangingTo && !loadNotPending(i18nInstance.isLanguageChangingTo, ns)) return false;\n    }\n  });\n};\nexport const getDisplayName = Component => Component.displayName || Component.name || (isString(Component) && Component.length > 0 ? Component : 'Unknown');\nexport const isString = obj => typeof obj === 'string';\nexport const isObject = obj => typeof obj === 'object' && obj !== null;","const matchHtmlEntity = /&(?:amp|#38|lt|#60|gt|#62|apos|#39|quot|#34|nbsp|#160|copy|#169|reg|#174|hellip|#8230|#x2F|#47);/g;\nconst htmlEntities = {\n  '&amp;': '&',\n  '&#38;': '&',\n  '&lt;': '<',\n  '&#60;': '<',\n  '&gt;': '>',\n  '&#62;': '>',\n  '&apos;': \"'\",\n  '&#39;': \"'\",\n  '&quot;': '\"',\n  '&#34;': '\"',\n  '&nbsp;': ' ',\n  '&#160;': ' ',\n  '&copy;': '©',\n  '&#169;': '©',\n  '&reg;': '®',\n  '&#174;': '®',\n  '&hellip;': '…',\n  '&#8230;': '…',\n  '&#x2F;': '/',\n  '&#47;': '/'\n};\nconst unescapeHtmlEntity = m => htmlEntities[m];\nexport const unescape = text => text.replace(matchHtmlEntity, unescapeHtmlEntity);","import { unescape } from './unescape.js';\nlet defaultOptions = {\n  bindI18n: 'languageChanged',\n  bindI18nStore: '',\n  transEmptyNodeValue: '',\n  transSupportBasicHtmlNodes: true,\n  transWrapTextNodes: '',\n  transKeepBasicHtmlNodesFor: ['br', 'strong', 'i', 'p'],\n  useSuspense: true,\n  unescape\n};\nexport const setDefaults = (options = {}) => {\n  defaultOptions = {\n    ...defaultOptions,\n    ...options\n  };\n};\nexport const getDefaults = () => defaultOptions;","let i18nInstance;\nexport const setI18n = instance => {\n  i18nInstance = instance;\n};\nexport const getI18n = () => i18nInstance;","import { createContext } from 'react';\nimport { getDefaults, setDefaults } from './defaults.js';\nimport { getI18n, setI18n } from './i18nInstance.js';\nimport { initReactI18next } from './initReactI18next.js';\nexport { getDefaults, setDefaults, getI18n, setI18n, initReactI18next };\nexport const I18nContext = createContext();\nexport class ReportNamespaces {\n  constructor() {\n    this.usedNamespaces = {};\n  }\n  addUsedNamespaces(namespaces) {\n    namespaces.forEach(ns => {\n      this.usedNamespaces[ns] ??= true;\n    });\n  }\n  getUsedNamespaces = () => Object.keys(this.usedNamespaces);\n}\nexport const composeInitialProps = ForComponent => async ctx => {\n  const componentsInitialProps = (await ForComponent.getInitialProps?.(ctx)) ?? {};\n  const i18nInitialProps = getInitialProps();\n  return {\n    ...componentsInitialProps,\n    ...i18nInitialProps\n  };\n};\nexport const getInitialProps = () => {\n  const i18n = getI18n();\n  const namespaces = i18n.reportNamespaces?.getUsedNamespaces() ?? [];\n  const ret = {};\n  const initialI18nStore = {};\n  i18n.languages.forEach(l => {\n    initialI18nStore[l] = {};\n    namespaces.forEach(ns => {\n      initialI18nStore[l][ns] = i18n.getResourceBundle(l, ns) || {};\n    });\n  });\n  ret.initialI18nStore = initialI18nStore;\n  ret.initialLanguage = i18n.language;\n  return ret;\n};","import { useState, useEffect, useContext, useRef, useCallback } from 'react';\nimport { getI18n, getDefaults, ReportNamespaces, I18nContext } from './context.js';\nimport { warnOnce, loadNamespaces, loadLanguages, hasLoadedNamespace, isString, isObject } from './utils.js';\nconst usePrevious = (value, ignore) => {\n  const ref = useRef();\n  useEffect(() => {\n    ref.current = ignore ? ref.current : value;\n  }, [value, ignore]);\n  return ref.current;\n};\nconst alwaysNewT = (i18n, language, namespace, keyPrefix) => i18n.getFixedT(language, namespace, keyPrefix);\nconst useMemoizedT = (i18n, language, namespace, keyPrefix) => useCallback(alwaysNewT(i18n, language, namespace, keyPrefix), [i18n, language, namespace, keyPrefix]);\nexport const useTranslation = (ns, props = {}) => {\n  const {\n    i18n: i18nFromProps\n  } = props;\n  const {\n    i18n: i18nFromContext,\n    defaultNS: defaultNSFromContext\n  } = useContext(I18nContext) || {};\n  const i18n = i18nFromProps || i18nFromContext || getI18n();\n  if (i18n && !i18n.reportNamespaces) i18n.reportNamespaces = new ReportNamespaces();\n  if (!i18n) {\n    warnOnce('You will need to pass in an i18next instance by using initReactI18next');\n    const notReadyT = (k, optsOrDefaultValue) => {\n      if (isString(optsOrDefaultValue)) return optsOrDefaultValue;\n      if (isObject(optsOrDefaultValue) && isString(optsOrDefaultValue.defaultValue)) return optsOrDefaultValue.defaultValue;\n      return Array.isArray(k) ? k[k.length - 1] : k;\n    };\n    const retNotReady = [notReadyT, {}, false];\n    retNotReady.t = notReadyT;\n    retNotReady.i18n = {};\n    retNotReady.ready = false;\n    return retNotReady;\n  }\n  if (i18n.options.react?.wait) warnOnce('It seems you are still using the old wait option, you may migrate to the new useSuspense behaviour.');\n  const i18nOptions = {\n    ...getDefaults(),\n    ...i18n.options.react,\n    ...props\n  };\n  const {\n    useSuspense,\n    keyPrefix\n  } = i18nOptions;\n  let namespaces = ns || defaultNSFromContext || i18n.options?.defaultNS;\n  namespaces = isString(namespaces) ? [namespaces] : namespaces || ['translation'];\n  i18n.reportNamespaces.addUsedNamespaces?.(namespaces);\n  const ready = (i18n.isInitialized || i18n.initializedStoreOnce) && namespaces.every(n => hasLoadedNamespace(n, i18n, i18nOptions));\n  const memoGetT = useMemoizedT(i18n, props.lng || null, i18nOptions.nsMode === 'fallback' ? namespaces : namespaces[0], keyPrefix);\n  const getT = () => memoGetT;\n  const getNewT = () => alwaysNewT(i18n, props.lng || null, i18nOptions.nsMode === 'fallback' ? namespaces : namespaces[0], keyPrefix);\n  const [t, setT] = useState(getT);\n  let joinedNS = namespaces.join();\n  if (props.lng) joinedNS = `${props.lng}${joinedNS}`;\n  const previousJoinedNS = usePrevious(joinedNS);\n  const isMounted = useRef(true);\n  useEffect(() => {\n    const {\n      bindI18n,\n      bindI18nStore\n    } = i18nOptions;\n    isMounted.current = true;\n    if (!ready && !useSuspense) {\n      if (props.lng) {\n        loadLanguages(i18n, props.lng, namespaces, () => {\n          if (isMounted.current) setT(getNewT);\n        });\n      } else {\n        loadNamespaces(i18n, namespaces, () => {\n          if (isMounted.current) setT(getNewT);\n        });\n      }\n    }\n    if (ready && previousJoinedNS && previousJoinedNS !== joinedNS && isMounted.current) {\n      setT(getNewT);\n    }\n    const boundReset = () => {\n      if (isMounted.current) setT(getNewT);\n    };\n    if (bindI18n) i18n?.on(bindI18n, boundReset);\n    if (bindI18nStore) i18n?.store.on(bindI18nStore, boundReset);\n    return () => {\n      isMounted.current = false;\n      if (i18n) bindI18n?.split(' ').forEach(e => i18n.off(e, boundReset));\n      if (bindI18nStore && i18n) bindI18nStore.split(' ').forEach(e => i18n.store.off(e, boundReset));\n    };\n  }, [i18n, joinedNS]);\n  useEffect(() => {\n    if (isMounted.current && ready) {\n      setT(getT);\n    }\n  }, [i18n, keyPrefix, ready]);\n  const ret = [t, i18n, ready];\n  ret.t = t;\n  ret.i18n = i18n;\n  ret.ready = ready;\n  if (ready) return ret;\n  if (!ready && !useSuspense) return ret;\n  throw new Promise(resolve => {\n    if (props.lng) {\n      loadLanguages(i18n, props.lng, namespaces, () => resolve());\n    } else {\n      loadNamespaces(i18n, namespaces, () => resolve());\n    }\n  });\n};"],"names":["alreadyWarned","args","Date","console","warn","loadedClb","i18n","cb","isInitialized","initialized","setTimeout","off","on","loadNamespaces","ns","loadLanguages","lng","forEach","n","options","indexOf","push","obj","matchHtmlEntity","htmlEntities","unescapeHtmlEntity","m","defaultOptions","bindI18n","bindI18nStore","transEmptyNodeValue","transSupportBasicHtmlNodes","transWrapTextNodes","transKeepBasicHtmlNodesFor","useSuspense","unescape","text","replace","i18nInstance","createContext","ReportNamespaces","constructor","this","usedNamespaces","addUsedNamespaces","namespaces","getUsedNamespaces","Object","keys","alwaysNewT","language","namespace","keyPrefix","getFixedT","props","i18nFromProps","i18nFromContext","defaultNS","defaultNSFromContext","useContext","reportNamespaces","notReadyT","k","optsOrDefaultValue","defaultValue","Array","isArray","length","retNotReady","t","ready","react","wait","i18nOptions","initializedStoreOnce","every","languages","hasLoadedNamespace","precheck","loadNotPending","services","backendConnector","backend","isLanguageChangingTo","memoGetT","useCallback","useMemoizedT","nsMode","getT","getNewT","setT","useState","joinedNS","join","previousJoinedNS","value","ignore","ref","useRef","useEffect","current","usePrevious","isMounted","boundReset","store","split","e","ret","Promise","resolve"],"sourceRoot":""}